<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dev-Mex - python, elk</title><link href="https://mvaldes14.github.io/blog/" rel="alternate"></link><link href="https://mvaldes14.github.io/blog/feeds/python-elk.atom.xml" rel="self"></link><id>https://mvaldes14.github.io/blog/</id><updated>2019-05-19T00:00:00-05:00</updated><subtitle>IT Things.</subtitle><entry><title>Twitter Sentiment Analysis with Python &amp; Elasticsearch PartÂ 1</title><link href="https://mvaldes14.github.io/blog/python-elasticsearch-part-1.html" rel="alternate"></link><published>2019-05-19T00:00:00-05:00</published><updated>2019-05-19T00:00:00-05:00</updated><author><name>Miguel Valdes</name></author><id>tag:mvaldes14.github.io,2019-05-19:/blog/python-elasticsearch-part-1.html</id><summary type="html">&lt;p&gt;Elasticsearch has become part of my daily routine so the more I use it, the more I think of ways of using it outside work so I can&amp;nbsp;experiment.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Elasticsearch has become part of my daily routine so the more I use it, the more I think of ways of using it outside work so came up with the idea of why not creating my own ingestion with sentiment analysis so that data can be processed and tagged before being indexed into&amp;nbsp;Elastic?.&lt;/p&gt;
&lt;p&gt;I know Logstash has already a plugin to ingest data from twitter but since i also wanted to add a bit of polarity to each tweet and also wanted to control the process since I truly don&amp;#8217;t want to ingest a lot of data as I don&amp;#8217;t have unlimited storage so i decided to make my own and turns out it was quite&amp;nbsp;simple.&lt;/p&gt;
&lt;p&gt;Now to being, the dependencies I used for this&amp;nbsp;were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Elasticsearch&amp;nbsp;6.5&lt;/li&gt;
&lt;li&gt;python-elasticsearch&lt;/li&gt;
&lt;li&gt;twython&lt;/li&gt;
&lt;li&gt;textblob&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Elastic offers 2 libraries to interact with your node, so make sure you pip install &lt;a href="https://elasticsearch-py.readthedocs.io/en/master/"&gt;this one&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="start-your-es-instance"&gt;Start your &lt;span class="caps"&gt;ES&lt;/span&gt;&amp;nbsp;instance&lt;/h1&gt;
&lt;p&gt;Now setting an instance could be complicated so i&amp;#8217;ll just go over some very basic setup, if you want something more ellaborate the elastic.co &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.5/getting-started.html"&gt;documentation&lt;/a&gt; is quite&amp;nbsp;good.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have java&amp;nbsp;installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;java --version
openjdk version &lt;span class="s2"&gt;&amp;quot;1.8.0_192&amp;quot;&lt;/span&gt;
OpenJDK Runtime Environment &lt;span class="o"&gt;(&lt;/span&gt;build &lt;span class="m"&gt;1&lt;/span&gt;.8.0_192-b26&lt;span class="o"&gt;)&lt;/span&gt;
OpenJDK &lt;span class="m"&gt;64&lt;/span&gt;-Bit Server VM &lt;span class="o"&gt;(&lt;/span&gt;build &lt;span class="m"&gt;25&lt;/span&gt;.192-b26, mixed mode&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download Elasticsearch from &lt;a href="https://www.elastic.co/downloads"&gt;here&lt;/a&gt;. This will be different based on your &lt;span class="caps"&gt;OS&lt;/span&gt;/Distro. Again in my case I went with 6.5 since I run&amp;nbsp;&amp;#8220;Linux-Manjaro&amp;#8221;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Extract the&amp;nbsp;contents.&lt;/li&gt;
&lt;li&gt;Locate and run the binary, it&amp;#8217;s usually located inside &lt;code&gt;elasticsearch/bin/elasticsearch&lt;/code&gt;. The process should start and you should see something like this.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,670&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;aggs-matrix-stats&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,670&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;analysis-common&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;ingest-common&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;lang-expression&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;lang-mustache&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;lang-painless&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;mapper-extras&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;parent-join&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;percolator&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;rank-eval&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;reindex&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;repository-url&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;transport-netty4&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,671&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; loaded module &lt;span class="o"&gt;[&lt;/span&gt;tribe&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:53,672&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; no plugins loaded
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:57,413&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.d.DiscoveryModule    &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; using discovery &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;zen&lt;span class="o"&gt;]&lt;/span&gt; and host providers &lt;span class="o"&gt;[&lt;/span&gt;settings&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:58,116&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.n.Node               &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; initialized
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:58,116&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.n.Node               &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; starting ...
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:52:58,562&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.t.TransportService   &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; publish_address &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9300&lt;span class="o"&gt;}&lt;/span&gt;, bound_addresses &lt;span class="o"&gt;{[&lt;/span&gt;::1&lt;span class="o"&gt;]&lt;/span&gt;:9300&lt;span class="o"&gt;}&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.
&lt;span class="m"&gt;0&lt;/span&gt;.0.1:9300&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:53:01,689&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.c.s.MasterService    &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; zen-disco-elected-as-master &lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; nodes joined&lt;span class="o"&gt;)&lt;/span&gt;, reason: new_master &lt;span class="o"&gt;{&lt;/span&gt;Y
mQ2k-V&lt;span class="o"&gt;}{&lt;/span&gt;YmQ2k-VPQKGmDK_xcRSQuQ&lt;span class="o"&gt;}{&lt;/span&gt;yKFFqQ0xQHGmXjNxu89gAQ&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9300&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:53:01,696&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.c.s.ClusterApplierService&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; new_master &lt;span class="o"&gt;{&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;}{&lt;/span&gt;YmQ2k-VPQKGmDK_xcRSQuQ&lt;span class="o"&gt;}{&lt;/span&gt;yKFFqQ0xQHGmXjNxu89g
AQ&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9300&lt;span class="o"&gt;}&lt;/span&gt;, reason: apply cluster state &lt;span class="o"&gt;(&lt;/span&gt;from master &lt;span class="o"&gt;[&lt;/span&gt;master &lt;span class="o"&gt;{&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;}{&lt;/span&gt;YmQ2k-VPQKGmDK_xcRSQuQ&lt;span class="o"&gt;}{&lt;/span&gt;yKFFqQ0xQHGmXjNxu89gAQ&lt;span class="o"&gt;}{&lt;/span&gt;
&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9300&lt;span class="o"&gt;}&lt;/span&gt; committed version &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;zen-disco-elected-as-master &lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; nodes joined&lt;span class="o"&gt;)]])&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:53:01,714&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.h.n.Netty4HttpServerTransport&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; publish_address &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9200&lt;span class="o"&gt;}&lt;/span&gt;, bound_addresses &lt;span class="o"&gt;{[&lt;/span&gt;::1&lt;span class="o"&gt;]&lt;/span&gt;:9200
&lt;span class="o"&gt;}&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9200&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-12-24T07:53:01,715&lt;span class="o"&gt;][&lt;/span&gt;INFO &lt;span class="o"&gt;][&lt;/span&gt;o.e.n.Node&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;YmQ2k-V&lt;span class="o"&gt;]&lt;/span&gt; started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt; If you want to run it in the background add parameters &lt;code&gt;-d&lt;/code&gt; to daemonize&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Finally test to see if your node is ready by performing a request against your localhost in port 9200 which is the default used by ElasticSearch. In my case I named my node &amp;#8220;node-1&amp;#8221; and my cluster&amp;nbsp;&amp;#8220;home-cluster&amp;#8221;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    curl localhost:9200&lt;/span&gt;
&lt;span class="err"&gt;    {&lt;/span&gt;
&lt;span class="err"&gt;    &amp;quot;name&amp;quot; : &amp;quot;node-1&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;    &amp;quot;cluster_name&amp;quot; : &amp;quot;home-cluster&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;    &amp;quot;cluster_uuid&amp;quot; : &amp;quot;Ma_eYy0UT1C5b0WwOhQshw&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;    &amp;quot;version&amp;quot; : {&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;number&amp;quot; : &amp;quot;6.5.4&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;build_flavor&amp;quot; : &amp;quot;default&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;build_type&amp;quot; : &amp;quot;tar&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;build_hash&amp;quot; : &amp;quot;d2ef93d&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;build_date&amp;quot; : &amp;quot;2018-12-17T21:17:40.758843Z&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;build_snapshot&amp;quot; : false,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;lucene_version&amp;quot; : &amp;quot;7.5.0&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;minimum_wire_compatibility_version&amp;quot; : &amp;quot;5.6.0&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;minimum_index_compatibility_version&amp;quot; : &amp;quot;5.0.0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;    },&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;tagline&amp;quot; : &amp;quot;You Know, for Search&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Ok so now you have your single node cluster set, next step would be to create a &amp;#8220;model&amp;#8221; for the data you will ingest, again since i don&amp;#8217;t have unlimited storage or more nodes I will tweak the mapping for all of the indices that get created to just have 1 shard with no replicas. This is an elasticsearch type of deal so if you want to learn more, i would again point you to the documentation or you can ask me (social media stuff at the&amp;nbsp;bottom).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now i could create the mapping everything i index the data but then again, that&amp;#8217;s manual stuff which i kind of despise so i went ahead and created a template so that all indices that would match the pattern would adopt the&amp;nbsp;settings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;     &amp;quot;trump_tweets&amp;quot; : {&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;order&amp;quot; : 0,&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;index_patterns&amp;quot; : [&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;trump-*&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;        ],&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;settings&amp;quot; : {&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;index&amp;quot; : {&lt;/span&gt;
&lt;span class="err"&gt;            &amp;quot;number_of_shards&amp;quot; : &amp;quot;1&amp;quot;,&lt;/span&gt;
&lt;span class="err"&gt;            &amp;quot;number_of_replicas&amp;quot; : &amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;        }&lt;/span&gt;
&lt;span class="err"&gt;        },&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;mappings&amp;quot; : { },&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;aliases&amp;quot; : {&lt;/span&gt;
&lt;span class="err"&gt;        &amp;quot;trump-data&amp;quot; : { }&lt;/span&gt;
&lt;span class="err"&gt;        }&lt;/span&gt;
&lt;span class="err"&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So once you have the mapping defined we are finally ready to push some data using&amp;nbsp;Python!.&lt;/p&gt;
&lt;h1 id="ingesting-data-with-python-elasticsearch"&gt;Ingesting data with&amp;nbsp;python-elasticsearch&lt;/h1&gt;
&lt;p&gt;Alright so the first thing we have to do is acquire some twitter credentials and token so that we can make use of the libraries to retrieve tweets, to get those credentials go &lt;a href="https://developer.twitter.com/en/docs/basics/authentication/guides/access-tokens.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First thin is to define the connection object that we will use to interact with Elasticsearch, also we will import the whole thing, since we are doing sentiment analysis we of course need those&amp;nbsp;libraries.&lt;/p&gt;
&lt;p&gt;In the last portion we tell elasticsearch that if the index called &amp;#8216;trump&amp;#8217; does not&amp;nbsp;exist&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;textblob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TextBlob&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;elasticsearch&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Elasticsearch&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;uuid&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

    &lt;span class="c1"&gt;# Elastic Connection&lt;/span&gt;
    &lt;span class="n"&gt;es&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Elasticsearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;index_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;trump-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y.%m.&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we will define the data model used to describe each &amp;#8216;tweet&amp;#8217; or event and pass it down to elasticsearch, in here is where we do the sentiment analysis using library&amp;nbsp;&amp;#8216;TextBlob&amp;#8217;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Tweet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;realname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hashtags&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uuid4&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;realname&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweet_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweet_text&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hashtags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;hashtags&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentiment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_sentiment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_sentiment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;TextBlob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweet_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentiment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;polarity&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;push_to_elastic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;es&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;doc_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tweets&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;@timestamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;realname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;tweet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweet_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hashtags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentiment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_details&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tweet_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hashtags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentiment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally we will make use of the client and data objects to start a stream that will push all of the tweets with our added data to the Elasticsearch index so that we can later do some searches and visualizations with it using&amp;nbsp;Kibana.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;twython&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TwythonStreamer&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Tweet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;es&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

    &lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YOURKEYGOESHERE&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YOURKEYGOESHERE&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;AUTH_TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YOURKEYGOESHERE&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;AUTH_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YOURKEYGOESHERE&amp;quot;&lt;/span&gt;


    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyStreamer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TwythonStreamer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Tweet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;screen_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;realname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;tweet_text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;hashtags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;entities&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hashtags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_to_elastic&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;pass&lt;/span&gt;


        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request timed out, try again later&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyStreamer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONSUMER_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AUTH_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AUTH_SECRET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;track&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Trump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;trump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;


    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that we have everything ready we can simply run the script and this should start pushing data to our single node&amp;nbsp;cluster.&lt;/p&gt;
&lt;p&gt;To validate, you can hit the endpoint &amp;#8216;http://localhost:9200/_cat/indices?v&amp;#8217; and you should get something&amp;nbsp;like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    health status index                              uuid                   pri rep docs.count docs.deleted store.size pri.store.size&lt;/span&gt;
&lt;span class="err"&gt;    green  open   trump-2019.03.09                   yYHYloR5TEGlenfKjYe4PQ   1   0     139190            0       59mb           59mb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the next part we will start playing around with the data. If you have any questions, hit me up on social&amp;nbsp;media.&lt;/p&gt;</content><category term="python, elk"></category><category term="python"></category><category term="elasticsearch"></category></entry></feed>